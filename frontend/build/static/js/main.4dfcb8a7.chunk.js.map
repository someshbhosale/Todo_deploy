{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/SingleNote/SingleNote.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleNote/CreateNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/notesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","Item","Divider","onClick","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","error","notes","noteDelete","loadingDelete","errorDelete","successDelete","success","successCreate","noteCreate","successUpdate","noteUpdate","get","console","log","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","SingleNote","match","useState","setTitle","setContent","setCategory","date","setDate","fetching","params","updatedAt","onSubmit","preventDefault","put","updateNoteAction","Group","controlId","Label","Control","rows","LoginScreen","email","setEmail","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","setName","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","resetHandler","createNoteAction","Date","toLocaleDateString","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dfcb8a7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\",\n        position: \"relative\",\n        bottom: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Developed by Somesh Bhosale</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"react-router-dom\";\nimport { logout } from \"../actions/userActions\";\n\nfunction Header({ setSearch }) {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {}, [userInfo]);\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand href=\"/\">ToDo List App</Navbar.Brand>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"m-auto\">\n            {userInfo && (\n              <Form inline>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Search\"\n                  className=\"mr-sm-2\"\n                  onChange={(e) => setSearch(e.target.value)}\n                />\n              </Form>\n            )}\n          </Nav>\n          <Nav>\n            {userInfo ? (\n              <>\n                <Nav.Link href=\"/mynotes\">My Notes</Nav.Link>\n                <NavDropdown\n                  title={`${userInfo.name}`}\n                  id=\"collasible-nav-dropdown\"\n                >\n                  <NavDropdown.Item href=\"/profile\">\n                    {/* <img\n                      alt=\"\"\n                      src={`${userInfo.pic}`}\n                      width=\"25\"\n                      height=\"25\"\n                      style={{ marginRight: 10 }}\n                    /> */}\n                    My Profile\n                  </NavDropdown.Item>\n\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            ) : (\n              <Nav.Link href=\"/login\">Login</Nav.Link>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default Header;\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n};\n\nexport const register = (name, email, password, pic) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, pic, email, password },\n      config\n    );\n\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./LandingStyles.css\";\n\nfunction LandingPage({ history }) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <div className=\"main\">\n      <Container>\n        <Row>\n          <div className=\"intro-text\">\n            <div>\n              <h1 className=\"title\">Welcome to ToDo App</h1>\n              <p className=\"subtitle\">One Safe place for all your notes.</p>\n            </div>\n            <div className=\"buttonContainer\">\n              <Link to=\"/login\">\n                <Button size=\"lg\" className=\"landingbutton\">\n                  Login\n                </Button>\n              </Link>\n              <Link to=\"/register\">\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"lg\"\n                  className=\"landingbutton\"\n                >\n                  Signup\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport \"./Screen.css\";\n\nfunction MainScreen({ children, title }) {\n  return (\n    <div className=\"mainback\">\n      <Container>\n        <Row>\n          <div className=\"page\">\n            {title && (\n              <>\n                <h1 className=\"heading\">{title}</h1>\n                <hr />\n              </>\n            )}\n            {children}\n          </div>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\n\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\n\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\n\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\n","import {\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n} from \"../constants/notesConstants\";\nimport axios from \"axios\";\n\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/notes`, config);\n\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createNoteAction = (title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/notes/create`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\n\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updateNoteAction = (id, title, content, category) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/notes/${id}`,\n      { title, content, category },\n      config\n    );\n\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction Loading({ size = 100 }) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    >\n      <Spinner\n        style={{\n          width: size,\n          height: size,\n        }}\n        animation=\"border\"\n      />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst ErrorMessage = ({ variant = \"info\", children }) => {\n  return (\n    <Alert variant={variant} style={{ fontSize: 20 }}>\n      <strong>{children}</strong>\n    </Alert>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { useEffect } from \"react\";\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Link } from \"react-router-dom\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nfunction MyNotes({ history, search }) {\n  const dispatch = useDispatch();\n\n  const noteList = useSelector((state) => state.noteList);\n  const { loading, error, notes } = noteList;\n\n  // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = noteDelete;\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { success: successCreate } = noteCreate;\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { success: successUpdate } = noteUpdate;\n\n  useEffect(() => {\n    dispatch(listNotes());\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    successUpdate,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return (\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\n      {console.log(notes)}\n      <Link to=\"/createnote\">\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\n          Create new Note\n        </Button>\n      </Link>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {errorDelete && (\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n      )}\n      {loading && <Loading />}\n      {loadingDelete && <Loading />}\n      {notes &&\n        notes\n          .filter((filteredNote) =>\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\n          )\n          .reverse()\n          .map((note) => (\n            <Accordion>\n              <Card style={{ margin: 10 }} key={note._id}>\n                <Card.Header style={{ display: \"flex\" }}>\n                  <span\n                    // onClick={() => ModelShow(note)}\n                    style={{\n                      color: \"black\",\n                      textDecoration: \"none\",\n                      flex: 1,\n                      cursor: \"pointer\",\n                      alignSelf: \"center\",\n                      fontSize: 18,\n                    }}\n                  >\n                    <Accordion.Toggle\n                      as={Card.Text}\n                      variant=\"link\"\n                      eventKey=\"0\"\n                    >\n                      {note.title}\n                    </Accordion.Toggle>\n                  </span>\n\n                  <div>\n                    <Button href={`/note/${note._id}`}>Edit</Button>\n                    <Button\n                      variant=\"danger\"\n                      className=\"mx-2\"\n                      onClick={() => deleteHandler(note._id)}\n                    >\n                      Delete\n                    </Button>\n                  </div>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <h4>\n                      <Badge className=\"badge bg-secondary m-2\">\n                        Category - {note.category}\n                      </Badge>\n                    </h4>\n                    <blockquote className=\"blockquote mb-0\">\n                      <ReactMarkdown>{note.content}</ReactMarkdown>\n                      <footer className=\"blockquote-footer\">\n                        Created on{\" \"}\n                        <cite title=\"Source Title\">\n                          {note.createdAt.substring(0, 10)}\n                        </cite>\n                      </footer>\n                    </blockquote>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          ))}\n    </MainScreen>\n  );\n}\n\nexport default MyNotes;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Loading from \"../../components/Loading\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction SingleNote({ match, history }) {\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteUpdate = useSelector((state) => state.noteUpdate);\n  const { loading, error } = noteUpdate;\n\n  const noteDelete = useSelector((state) => state.noteDelete);\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\n\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateNoteAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  return (\n    <MainScreen title=\"Edit Note\">\n      <Card>\n        <Card.Header>Edit your Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={updateHandler}>\n            {loadingDelete && <Loading />}\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            {errorDelete && (\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\n            )}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                placeholder=\"Enter the title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                placeholder=\"Enter the content\"\n                rows={4}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                placeholder=\"Enter the Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button variant=\"primary\" type=\"submit\">\n              Update Note\n            </Button>\n            <Button\n              className=\"mx-2\"\n              variant=\"danger\"\n              onClick={() => deleteHandler(match.params.id)}\n            >\n              Delete Note\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Updated on - {date.substring(0, 10)}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default SingleNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { login } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./LoginScreen.css\";\n\nfunction LoginScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/mynotes\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <MainScreen title=\"LOGIN\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            New Customer ? <Link to=\"/register\">Register Here</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { register } from \"../../actions/userActions\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./RegisterScreen.css\";\n\nfunction RegisterScreen({ history }) {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n  );\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const postDetails = (pics) => {\n    if (\n      pics ===\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n    ) {\n      return setPicMessage(\"Please Select an Image\");\n    }\n    setPicMessage(null);\n    if (pics.type === \"image/jpg\" || pics.type === \"image/png\" || pics.type === \"image/jpeg\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"todoapp\");\n      data.append(\"cloud_name\",\"somesh2811\");\n      fetch(\"https://api.cloudinary.com/v1_1/somesh2811/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage(\"Passwords do not match\");\n    } else dispatch(register(name, email, password, pic));\n  };\n\n  return (\n    <MainScreen title=\"REGISTER\">\n      <div className=\"loginContainer\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\n        {loading && <Loading />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={password}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              value={confirmpassword}\n              placeholder=\"Confirm Password\"\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          {picMessage && (\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n          )}\n          <Form.Group controlId=\"pic\">\n            <Form.Label>Profile Picture</Form.Label>\n            <Form.File\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"custom-file\"\n              type=\"image/png\"\n              label=\"Upload Profile Picture\"\n              custom\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Register\n          </Button>\n        </Form>\n        <Row className=\"py-3\">\n          <Col>\n            Have an Account ? <Link to=\"/login\">Login</Link>\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n}\n\nexport default RegisterScreen;\n","import React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createNoteAction } from \"../../actions/notesActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\n\nfunction CreateNote({ history }) {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const noteCreate = useSelector((state) => state.noteCreate);\n  const { loading, error, note } = noteCreate;\n\n  console.log(note);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(createNoteAction(title, content, category));\n    if (!title || !content || !category) return;\n\n    resetHandler();\n    history.push(\"/mynotes\");\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <MainScreen title=\"Create a Note\">\n      <Card>\n        <Card.Header>Create a new Note</Card.Header>\n        <Card.Body>\n          <Form onSubmit={submitHandler}>\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"title\"\n                value={title}\n                placeholder=\"Enter the title\"\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                placeholder=\"Enter the content\"\n                rows={4}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n            {content && (\n              <Card>\n                <Card.Header>Note Preview</Card.Header>\n                <Card.Body>\n                  <ReactMarkdown>{content}</ReactMarkdown>\n                </Card.Body>\n              </Card>\n            )}\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"content\"\n                value={category}\n                placeholder=\"Enter the Category\"\n                onChange={(e) => setCategory(e.target.value)}\n              />\n            </Form.Group>\n            {loading && <Loading size={50} />}\n            <Button type=\"submit\" variant=\"primary\">\n              Create Note\n            </Button>\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\n              Reset Feilds\n            </Button>\n          </Form>\n        </Card.Body>\n\n        <Card.Footer className=\"text-muted\">\n          Creating on - {new Date().toLocaleDateString()}\n        </Card.Footer>\n      </Card>\n    </MainScreen>\n  );\n}\n\nexport default CreateNote;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const { loading, error, success } = userUpdate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = (pics) => {\n    setPicMessage(null);\n    if (pics.type === \"image/jpg\" || pics.type === \"image/png\" || pics.type === \"image/jpeg\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"todoapp\");\n      data.append(\"cloud_name\", \"somesh2811\");\n      fetch(\"https://api.cloudinary.com/v1_1/somesh2811/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(pic);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(updateProfile({ name, email, password, pic }));\n  };\n\n  return (\n    <MainScreen title=\"EDIT PROFILE\">\n      <div>\n        <Row className=\"profileContainer\">\n          <Col md={6}>\n            <Form onSubmit={submitHandler}>\n              {loading && <Loading />}\n              {success && (\n                <ErrorMessage variant=\"success\">\n                  Updated Successfully\n                </ErrorMessage>\n              )}\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>{\" \"}\n              {picMessage && (\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\n              )}\n              <Form.Group controlId=\"pic\">\n                <Form.Label>Change Profile Picture</Form.Label>\n                <Form.File\n                  onChange={(e) => postDetails(e.target.files[0])}\n                  id=\"custom-file\"\n                  type=\"image/png\"\n                  label=\"Upload Profile Picture\"\n                  custom\n                />\n              </Form.Group>\n              <Button type=\"submit\" varient=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img src={pic} alt={name} className=\"profilePic\" />\n          </Col>\n        </Row>\n      </div>\n    </MainScreen>\n  );\n};\n\nexport default ProfileScreen;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from \"./screens/SingleNote/CreateNote\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <Router>\n      <Header setSearch={(s) => setSearch(s)} />\n      <main className=\"App\">\n        <Route path=\"/\" component={LandingPage} exact />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route\n          path=\"/mynotes\"\n          component={({ history }) => (\n            <MyNotes search={search} history={history} />\n          )}\n        />\n        <Route path=\"/note/:id\" component={SingleNote} />\n        <Route path=\"/createnote\" component={CreateNote} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  noteCreateReducer,\n  noteDeleteReducer,\n  noteListReducer,\n  noteUpdateReducer,\n} from \"./reducers/notesReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  noteList: noteListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  NOTES_UPDATE_REQUEST,\n  NOTES_UPDATE_SUCCESS,\n  NOTES_UPDATE_FAIL,\n  NOTES_CREATE_FAIL,\n  NOTES_CREATE_REQUEST,\n  NOTES_CREATE_SUCCESS,\n  NOTES_DELETE_FAIL,\n  NOTES_DELETE_REQUEST,\n  NOTES_DELETE_SUCCESS,\n  NOTES_LIST_FAIL,\n  NOTES_LIST_REQUEST,\n  NOTES_LIST_SUCCESS,\n} from \"../constants/notesConstants\";\n\nexport const noteListReducer = (state = { notes: [] }, action) => {\n  switch (action.type) {\n    case NOTES_LIST_REQUEST:\n      return { loading: true };\n    case NOTES_LIST_SUCCESS:\n      return { loading: false, notes: action.payload };\n    case NOTES_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_CREATE_REQUEST:\n      return { loading: true };\n    case NOTES_CREATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_DELETE_REQUEST:\n      return { loading: true };\n    case NOTES_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_DELETE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n\nexport const noteUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case NOTES_UPDATE_REQUEST:\n      return { loading: true };\n    case NOTES_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case NOTES_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, userInfo: action.payload, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload, success: false };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}